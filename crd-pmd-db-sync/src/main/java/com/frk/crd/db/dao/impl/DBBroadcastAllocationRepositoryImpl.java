package com.frk.crd.db.dao.impl;

import com.frk.crd.db.dao.DBBroadcastAllocationRepository;
import com.frk.crd.db.model.DBAllocation;
import com.frk.crd.model.IAllocation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

@Slf4j
@Component
public class DBBroadcastAllocationRepositoryImpl implements DBBroadcastAllocationRepository {
  final String ALLOCATION_SQL = " SELECT "
      + " o.sec_id,\n"
      + " o.order_id,\n"
      + " oa.trade_id,\n"
      + "    oa.fee_1_amt,\n"
      + "    oa.fee_1_base_amt,\n"
      + "    oa.fee_2_amt,\n"
      + "    oa.fee_2_base_amt,\n"
      + "    oa.fee_3_amt,\n"
      + "    oa.fee_3_base_amt,\n"
      + "    oa.fee_4_amt,\n"
      + "    oa.fee_4_base_amt,\n"
      + "    oa.fee_5_amt,\n"
      + "    oa.fee_5_base_amt,\n"
      + "    oa.fee_6_amt,\n"
      + "    oa.fee_6_base_amt,\n"
      + "    oa.cross_acct_cd,\n"
      + "    oa.cross_ops,\n"
      + "    oa.exec_crrncy_pair_rate,\n"
      + "    oa.acct_cd,\n"
      + "    oa.order_id,\n"
      + "    oa.trade_id,\n"
      + "    oa.broker_reason,\n"
      + "    oa.commision_ind,\n"
      + "    oa.commision_settle_amt,\n"
      + "    oa.commision_amt,\n"
      + "    oa.commision_rate,\n"
      + "    oa.create_user,\n"
      + "    oa.delivery_type,\n"
      + "    oa.dir_exec_broker,\n"
      + "    oa.directed_broker,\n"
      + "    oa.exec_amt,\n"
      + "    oa.exec_base_amt,\n"
      + "    oa.exec_broker,\n"
      + "    oa.exec_original_face,\n"
      + "    oa.exec_price,\n"
      + "    oa.exec_qty,\n"
      + "    oa.exec_settle_price,\n"
      + "    oa.inc_amt,\n"
      + "    oa.inc_base_amt,\n"
      + "    oa.inc_settle_amt,\n"
      + "    oa.net_prin_amt,\n"
      + "    oa.net_prin_base_amt,\n"
      + "    oa.net_prin_settle_amt,\n"
      + "    oa.original_face,\n"
      + "    oa.prime_bkr_fee_amt,\n"
      + "    oa.prin_settle_crrncy,\n"
      + "    oa.prin_settle_fx_rate,\n"
      + "    oa.ref_id2,\n"
      + "    oa.step_out_broker,\n"
      + "    oa.strategy_cd_1,\n"
      + "    oa.strategy_cd_2,\n"
      + "    oa.target_amt,\n"
      + "    oa.target_base_amt,\n"
      + "    oa.target_inc_amt,\n"
      + "    oa.target_inc_base_amt,\n"
      + "    oa.target_notnl_amt,\n"
      + "    oa.prin_base_fx_rate,\n"
      + "    oa.target_notnl_base_amt,\n"
      + "    oa.target_original_face,\n"
      + "    oa.target_qty,\n"
      + "    oa.udf_float6,\n"
      + "    oa.adj_tgt_notnl_amt,\n"
      + "    f.manager,\n"
      + "    oa.clear_broker,\n"
      + "    oa.tax_lot_udf_char2,\n"
      + "    oa.tax_lot_udf_char3,\n"
      + "    oa.tax_lot_udf_float1,\n"
      + "    oa.alloc_uti,\n"
      + "    oa.clear_uti,\n"
      + "    fxin.transact_time AS clearing_time\n"
      + " FROM crd_owner.ts_order o "
      + "    JOIN crd_owner.csm_security s ON o.sec_id = s.sec_id "
      + "    JOIN crd_owner.csm_security_cust scst ON o.sec_id = scst.sec_id "
      + "    JOIN crd_owner.ts_order_sec_spec oss ON o.order_id = oss.order_id "
      + "    JOIN crd_owner.ts_order_alloc oa ON o.order_id = oa.order_id "
      + "    JOIN crd_owner.cs_fund f ON oa.acct_cd = f.acct_cd "
      + "    LEFT JOIN ( "
      + "        SELECT b.tm_orig_id, b.confirmstatus, b.allocaccount, b.transact_time "
      + "        FROM "
      + "            ( "
      + "                SELECT "
      + "                    a.tm_orig_id, "
      + "                    a.confirmstatus, "
      + "                    coalesce(tranls.cs_fld_cd,a.allocaccount) allocaccount, "
      + "                    a.transact_time, "
      + "                    a.recv_time, "
      + "                    ROW_NUMBER() OVER( "
      + "                        PARTITION BY a.tm_orig_id, "
      + "                        a.confirmstatus, "
      + "                        a.allocaccount, "
      + "                        a.transact_time "
      + "                        ORDER BY "
      + "                            a.recv_time DESC "
      + "                    ) ranked_rec "
      + "                FROM "
      + "                    ( "
      + "                        SELECT "
      + "                            tm_orig_id, "
      + "                            CASE "
      + "                                    WHEN instr(raw_msg,'665=') > 0 THEN CAST(substr(substr(raw_msg,instr(raw_msg,'665=') ),5,instr(substr(raw_msg,instr(raw_msg,'665=') ),'|' "
      + ") - 5) AS CHAR(1) ) "
      + "                                    ELSE NULL "
      + "                                END "
      + "                            confirmstatus, "
      + "                            CASE "
      + "                                    WHEN instr(raw_msg,'79=') > 0 THEN CAST(substr(substr(raw_msg,instr(raw_msg,'79=') ),4,instr(substr(raw_msg,instr(raw_msg,'79=') ),'|') - "
      + "4) AS VARCHAR2(20) ) "
      + "                                    ELSE NULL "
      + "                                END "
      + "                            allocaccount, "
      + "                            fix_msg_type, "
      + "                            transact_time, "
      + "                            recv_time "
      + "                        FROM "
      + "                            crd_owner.fix_incoming "
      + "                        WHERE "
      + "                            fix_msg_type = 'conf' "
      + "                    ) a "
      + "                    LEFT JOIN ( "
      + "                        SELECT "
      + "                            trade_fld_cd, "
      + "                            cs_fld_cd "
      + "                        FROM "
      + "                            crd_owner.csm_translation "
      + "                        WHERE "
      + "                            trade_syst_cd = 'FIXMASTERSLEEVE' "
      + "                            AND   data_typ = 'ACCT_CD' "
      + "                    ) tranls ON tranls.trade_fld_cd = a.allocaccount "
      + "                WHERE "
      + "                    a.confirmstatus = 4 "
      + "            ) b "
      + "        WHERE "
      + "            b.ranked_rec = 1 "
      + "    ) fxin ON o.order_id = fxin.tm_orig_id "
      + "              AND oa.acct_cd = fxin.allocaccount "
      + "WHERE o.order_id = ? "
      + "    AND   ( "
      + "        o.status = 'ACCT' "
      + "        OR    o.status = 'CNCLACCT' "
      + "    ) "
      + "    AND   EXISTS ( "
      + "        SELECT "
      + "            1 "
      + "        FROM "
      + "            crd_owner.au_order audit_o "
      + "        WHERE "
      + "            o.order_id = audit_o.order_id "
      + "            AND   audit_o.au_change_ind = 'U' "
      + "            AND   ( "
      + "                ( "
      + "                    audit_o.status <> 'ACCT' "
      + "                    AND   o.status = 'ACCT' "
      + "                ) "
      + "                OR    ( "
      + "                    audit_o.status <> 'CNCLACCT' "
      + "                    AND   o.status = 'CNCLACCT' "
      + "                ) "
      + "            ) "
      + "    ) "
      + "ORDER BY 2, 1 "
      ;

  private final JdbcTemplate jdbcTemplate;

  public DBBroadcastAllocationRepositoryImpl(JdbcTemplate jdbcTemplate) {
    this.jdbcTemplate = jdbcTemplate;
  }

  @Override
  public List<IAllocation> getAllocations(String orderId) {
    final List<IAllocation> allocations = new ArrayList<>();
    jdbcTemplate.query(this.ALLOCATION_SQL, preparedStatementSetter -> {
          preparedStatementSetter.setString(1, orderId);
        },
        resultSet -> {
          DBAllocation allocation = new DBAllocation();
          allocation.setOriginalOrderId(resultSet.getString(1));
          allocation.setOrderId(resultSet.getString(2));

          //      + " o.sec_id,\n"
          //      + " o.order_id,\n"
          //      + " oa.trade_id,\n"
          //      + "    oa.fee_1_amt,\n"
          //      + "    oa.fee_1_base_amt,\n"
          //      + "    oa.fee_2_amt,\n"
          //      + "    oa.fee_2_base_amt,\n"
          //      + "    oa.fee_3_amt,\n"
          //      + "    oa.fee_3_base_amt,\n"
          //      + "    oa.fee_4_amt,\n"
          //      + "    oa.fee_4_base_amt,\n"
          //      + "    oa.fee_5_amt,\n"
          //      + "    oa.fee_5_base_amt,\n"
          //      + "    oa.fee_6_amt,\n"
          //      + "    oa.fee_6_base_amt,\n"
          //      + "    oa.cross_acct_cd,\n"
          //      + "    oa.cross_ops,\n"
          //      + "    oa.exec_crrncy_pair_rate,\n"
          //      + "    oa.acct_cd,\n"
          //      + "    oa.order_id,\n"
          //      + "    oa.trade_id,\n"
          //      + "    oa.broker_reason,\n"
          //      + "    oa.commision_ind,\n"
          //      + "    oa.commision_settle_amt,\n"
          //      + "    oa.commision_amt,\n"
          //      + "    oa.commision_rate,\n"
          //      + "    oa.create_user,\n"
          //      + "    oa.delivery_type,\n"
          //      + "    oa.dir_exec_broker,\n"
          //      + "    oa.directed_broker,\n"
          //      + "    oa.exec_amt,\n"
          //      + "    oa.exec_base_amt,\n"
          //      + "    oa.exec_broker,\n"
          //      + "    oa.exec_original_face,\n"
          //      + "    oa.exec_price,\n"
          //      + "    oa.exec_qty,\n"
          //      + "    oa.exec_settle_price,\n"
          //      + "    oa.inc_amt,\n"
          //      + "    oa.inc_base_amt,\n"
          //      + "    oa.inc_settle_amt,\n"
          //      + "    oa.net_prin_amt,\n"
          //      + "    oa.net_prin_base_amt,\n"
          //      + "    oa.net_prin_settle_amt,\n"
          //      + "    oa.original_face,\n"
          //      + "    oa.prime_bkr_fee_amt,\n"
          //      + "    oa.prin_settle_crrncy,\n"
          //      + "    oa.prin_settle_fx_rate,\n"
          //      + "    oa.ref_id2,\n"
          //      + "    oa.step_out_broker,\n"
          //      + "    oa.strategy_cd_1,\n"
          //      + "    oa.strategy_cd_2,\n"
          //      + "    oa.target_amt,\n"
          //      + "    oa.target_base_amt,\n"
          //      + "    oa.target_inc_amt,\n"
          //      + "    oa.target_inc_base_amt,\n"
          //      + "    oa.target_notnl_amt,\n"
          //      + "    oa.prin_base_fx_rate,\n"
          //      + "    oa.target_notnl_base_amt,\n"
          //      + "    oa.target_original_face,\n"
          //      + "    oa.target_qty,\n"
          //      + "    oa.udf_float6,\n"
          //      + "    oa.adj_tgt_notnl_amt,\n"
          //      + "    f.manager,\n"
          //      + "    oa.clear_broker,\n"
          //      + "    oa.tax_lot_udf_char2,\n"
          //      + "    oa.tax_lot_udf_char3,\n"
          //      + "    oa.tax_lot_udf_float1,\n"
          //      + "    oa.alloc_uti,\n"
          //      + "    oa.clear_uti,\n"
          //      + "    fxin.transact_time AS clearing_time\n"
          allocations.add(allocation);
        });
    return allocations;
  }
}